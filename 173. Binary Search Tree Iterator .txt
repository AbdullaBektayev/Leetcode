https://leetcode.com/problems/binary-search-tree-iterator/


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class BSTIterator {
public:
    TreeNode* main = nullptr;
    BSTIterator(TreeNode* root) {
        main = root;
    }
    
    /** @return the next smallest number */
    int next() {
        int num;
        if(!main->left){
            num = main->val;
            main = main->right;
            return num;
        }
        TreeNode* del = main;
        TreeNode* cur = main;
        while(del->left){
            cur = del;
            del = del->left;
        }
        num = del->val;
        cur->left = del->right;
        //delete del;
        return num;
    }
    
    /** @return whether we have a next smallest number */
    bool hasNext() {
        if(main){return true;}
        return false;
    }
};

/**
 * Your BSTIterator object will be instantiated and called as such:
 * BSTIterator* obj = new BSTIterator(root);
 * int param_1 = obj->next();
 * bool param_2 = obj->hasNext();
 */