https://leetcode.com/problems/find-duplicate-subtrees/




/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
private:
unordered_map<string , int> map;
vector<TreeNode*> res;
    
string collect(TreeNode* root){
    if(!root){return "#";}
    string temp = to_string(root->val) + collect(root->left) + collect(root->right);
    map[temp]++;
    if(map[temp] == 2){
        res.push_back(root);
    }
    return temp;
}
public:
    vector<TreeNode*> findDuplicateSubtrees(TreeNode* root) {
        collect(root);
        return res;
    }
};