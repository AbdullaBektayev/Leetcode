https://leetcode.com/problems/minimum-domino-rotations-for-equal-row/


class Solution {
public:
    int minDominoRotations(vector<int>& A, vector<int>& B) {
        int n = A.size();
        int cnt[7]={0,0,0,0,0,0,0};
        for(int i=0;i<n;i++) {
            if(A[i] == B[i]) {
                cnt[A[i]]+=1;
            } else {
                cnt[A[i]]+=1;
                cnt[B[i]]+=1;
            }
        }
        
        vector<int> cand;
        for(int i=1;i<=6;i++) {
            if(cnt[i]==n) cand.push_back(i);
        }
        if(cand.empty()) return -1;
        
        int res = n;
        for(int c : cand) {
            int a=0,b=0;
            for(int i=0;i<n;i++) {
                if(A[i]!=c) a++;
                if(B[i]!=c) b++;
            }
            res = min(res, min(a,b));
        }
        return res;
    }
};