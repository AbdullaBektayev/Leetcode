https://leetcode.com/problems/powerful-integers/



class Solution {
public:
    int pow(int a,int b){
    int temp = a;
    if(b == 0){
        return 1;
    }
    else{
        for(int i= 0; i < b - 1; i++){
                a *= temp;
        }
        return a;
    }
}
    
    
    vector<int> powerfulIntegers(int x, int y, int bound) {
    vector<int> v;
    int count = 0;
    
    for(int i = 0; i < 100; i++ ){
        for(int j = 0; j < 100; j++){
            if(pow(x,j) + pow(y, i) <= bound){
                count = 0;
                v.push_back(pow(x,j) + pow(y, i));
            }
            else{
                count++;
                break;
            }
        }
        if(count == 2){
            break;
        }
    }
    
    for(int i = 0; i < v.size(); i++){
        for(int j = i + 1; j < v.size(); j++){
            if(v[i] == v[j]){
                v.erase(v.begin() + j);
                j--;
            }
        }
    }
    
        return v;
    }
};