https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
private:
    TreeNode* main = nullptr;
    
    TreeNode* insert(TreeNode* root, int val){
        if(!root){
            if(!main){
                main = new TreeNode(val);
                return main;
            }
            return new TreeNode(val);
        }
        if(root->val > val){
            root->left = insert(root->left,val);
        }
        else{
            root->right = insert(root->right,val);
        }
        return root;
    }
    
    void insertBST(vector<int> & nums, int start,int end){
        if(start>end){return;}
        int pivot = (end + start)/2;
        insert(main,nums[pivot]);
        insertBST(nums,pivot + 1, end);
        insertBST(nums,start,pivot - 1);
    }
public:
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        int size = nums.size();
        if(size == 0 ){return main;}
        insertBST(nums,0,size-1);
        return main;
    }
};