https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/

class Solution {
public:
    int maxProfit(int k, vector<int>& prices) {
        if(prices.size() == 0){return 0;}
        if(k > prices.size()/2){
            int sum = 0;
            for(int i = 1; i < prices.size(); i++){
                sum += (prices[i] - prices[i-1]) > 0 ? prices[i] - prices[i-1] : 0;
            }
            return sum;
        }
        vector<vector<int>> dp(k+1,vector<int>(prices.size() + 1,0));
        for(int i = 1; i <= k; i++){
            int maxdiff = dp[i-1][0] - prices[0];
            for(int j = 1; j < prices.size(); j++){
                dp[i][j] = max(dp[i][j-1],prices[j] + maxdiff);
                maxdiff = max(maxdiff,dp[i-1][j] - prices[j]);
            }
        }
        return dp[k][prices.size()-1];
    }
};